KMP算法是一种改进的字符串匹配算法。核心是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。
时间复杂度为O(m+n);

求解步骤：1、找到模式串（子串）的部分匹配表；
        2、根据部分匹配表，算出每次不匹配发生时需要移动的位数。如此，避免了每次移动一位的暴力匹配法。

例如课件中的移动位数：
            已知空格与D不匹配时，前面六个字符”ABCDAB”是匹配的。查表可知，最后一个匹配字符B对应的”部分匹配值”为2，
            因此按照下面的公式算出向后移动的位数：
            移动位数 = 已匹配的字符数 - 对应的部分匹配值
            因为 6 - 2 等于4，所以将搜索词向后移动 4 位。

部分匹配表的产生：参考课件中的说明。